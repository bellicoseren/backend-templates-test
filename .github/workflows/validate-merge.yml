name: Validate Merge Strategy (Dynamic)

on:
  workflow_call:
    inputs:
      pr_number:
        required: true
        type: string
      source_branch:
        required: true
        type: string
      target_branch:
        required: true
        type: string
      repo_full_name:
        required: true
        type: string

jobs:
  validate_merge:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read

    steps:
      - name: Display PR details
        run: |
          echo "PR number: ${{ inputs.pr_number }}"
          echo "Source: ${{ inputs.source_branch }}"
          echo "Target: ${{ inputs.target_branch }}"
          echo "Repo: ${{ inputs.repo_full_name }}"

      - name: Fetch PR merge method
        id: get_method
        run: |
          echo "Fetching PR merge method..."
          RESPONSE=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            https://api.github.com/repos/${{ inputs.repo_full_name }}/pulls/${{ inputs.pr_number }} )

          MERGE_METHOD=$(echo "$RESPONSE" | jq -r '.mergeable_state')
          # fallback por si GitHub aún no ha calculado el mergeable_state
          if [[ "$MERGE_METHOD" == "null" || -z "$MERGE_METHOD" ]]; then
            MERGE_METHOD="unknown"
          fi

          echo "merge_method=$MERGE_METHOD" >> $GITHUB_OUTPUT
          echo "Detected merge method: $MERGE_METHOD"

      - name: Validate merge rules
        id: validate
        run: |
          SRC="${{ inputs.source_branch }}"
          TGT="${{ inputs.target_branch }}"
          METHOD="${{ steps.get_method.outputs.merge_method }}"

          echo "Validating PR merge strategy..."
          echo "Source=$SRC  Target=$TGT  Method=$METHOD"

          # Rules matrix
          if [[ "$SRC" == feature/* && "$TGT" == "develop" ]]; then
            if [[ "$METHOD" != "squash" ]]; then
              echo "❌ Invalid merge strategy: $METHOD. Only 'squash' allowed for feature → develop."
              echo "valid=false" >> $GITHUB_OUTPUT
              exit 0
            fi
            echo "✅ Valid merge: squash from feature → develop."
            echo "valid=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          if [[ "$SRC" == "main" && "$TGT" == "develop" && "$METHOD" == "merge" ]]; then
            echo "✅ Merge allowed for main → develop."
            echo "valid=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "ℹ️ No restrictions for this branch combination."
          echo "valid=true" >> $GITHUB_OUTPUT

      - name: Comment on PR if invalid
        if: steps.validate.outputs.valid == 'false'
        run: |
          MSG="❌ Invalid merge method detected.
          Only **Squash and Merge** is allowed when merging from feature → develop."
          
          curl -s -H "Authorization: token $GITHUB_TOKEN" \
            -X POST \
            -d "{\"body\": \"$MSG\"}" \
            https://api.github.com/repos/${{ inputs.repo_full_name }}/issues/${{ inputs.pr_number }}/comments
          exit 1
